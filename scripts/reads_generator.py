import random
from pathlib import Path


def random_nucleotide():
    return random.choice("ACGT")


def mutate_sequence(seq):
    seq = list(seq)
    idx = random.randint(0, len(seq) - 1)
    mutation_type = random.randint(1, 3)

    if mutation_type == 1:  # Substitution
        old_base = seq[idx]
        new_base = random_nucleotide()
        while new_base == old_base:
            new_base = random_nucleotide()
        seq[idx] = new_base

    elif mutation_type == 2:  # Deletion
        del seq[idx]

    elif mutation_type == 3:  # Insertion
        new_base = random_nucleotide()
        seq.insert(idx + 1, new_base)

    return ''.join(seq)


def main():
    # original_seq = "AATCTGTTCGAGGGCTAGCTCGATGATTGCGTCGTGGGAAAAATCTCAGAAATCTGTTCGAGGGCTAGCTCGATGATTGCGTCGTGGGAAAAATCTCAGAAATCTGTTCGAGGGCTAGCTCGATGATTGCGTCGTGGGAAAAATCTCAGAAATCTGTTCGAGGGCTAGCTCGATGATTGCGTCGTGGGAAAAATCTCAGAAATCTGTTCGAGGGCTAGCTCGATGATTGCGTCGTGGGAAAAATCTCAGAAATCTGTTCGAGGGCTAGCTCGATGATTGCGTCGTGGGAAAAATCTCAGAAATCTGTTCGAGGGCTAGCTCGATGATTGCGTCGTGGGAAAAATCTCAGAAATCTGTTCGAGGGCTAGCTCGATGATTGCGTCGTGGGAAAAATCTCAGAAATCTGTTCGAGGGCTAGCTCGATGATTGCGTCGTGGGAAAAATCTCAGAAATCTGTTCGAGGGCTAGCTCGATGATTGCGTCGTGGGAAAAATCTCAGAAATCTGTTCGAGGGCTAGCTCGATGATTGCGTCGTGGGAAAAATCTCAGAAATCTGTTCGAGGGCTAGCTCGATGATTGCGTCGTGGGAAAAATCTCAGAAATCTGTTCGAGGGCTAGCTCGATGATTGCGTCGTGGGAAAAATCTCAGAAATCTGTTCGAGGGCTAGCTCGATGATTGCGTCGTGGGAAAAATCTCAGAAATCTGTTCGAGGGCTAGCTCGATGATTGCGTCGTGGGAAAAATCTCAGAAATCTGTTCGAGGGCTAGCTCGATGATTGCGTCGTGGGAAAAATCTCAGAAATCTGTTCGAGGGCTAGCTCGATGATTGCGTCGTGGGAAAAATCTCAGAAATCTGTTCGAGGGCTAGCTCGATGATTGCGTCGTGGGAAAAATCTCAGAAATCTGTTCGAGGGCTAGCTCGATGATTGCGTCGTGGGAAAAATCTCAGAAATCTGTTCGAGGGCTAGCTCGATGATTGCGTCGTGGGAAAAATCTCAGA"
    original_seq = "AATCTGTTCGAGGGCTAGCTCGATGATTGCGTCGTGGGAAAAATCTCAGAAATCTGTTCGAGGGCTAGCTCGATGATTGCGTCGTGGGAAAAATCTCAGA"
    NUM_READS = 1000000
    NUM_VAR = 20


    output_file = Path("../test/reads/1000K/reads_100.fa")
    
    with output_file.open("w") as fasta:
        for i in range(NUM_READS):
            read = original_seq
            for _ in range(NUM_VAR):
                read = mutate_sequence(read)
            fasta.write(f">read_{i}\n")
            fasta.write(f"{read}\n")


if __name__ == "__main__":
    main()
